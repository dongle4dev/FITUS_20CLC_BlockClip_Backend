generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model users {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  wallet        String          @unique
  username      String          @unique 
  avatar        String?
  cover         String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  active        Boolean?        @default(true)
  seller_marketorders  marketorders[]   @relation("seller_marketorders")
  buyer_marketorders  marketorders[]     @relation("buyer_marketorders")
}

model collections {
  id                  String          @id @default(auto()) @map("_id") @db.ObjectId
  collectionID        String?         @unique
  creator             String          @unique
  chainID             String
  title               String
  title_lowercase     String      
  description         String?
  bannerURL           String?
  averagePrice        Float           @default(0)
  totalViews          Int             @default(0)
  category            String?
  paymentType         String?
  contractAddress     String?
  active              Boolean?        @default(true)
  disabled            Boolean?        @default(false)
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
}

model tokens {
  id                  String          @id @default(auto()) @map("_id") @db.ObjectId
  tokenID             String?         @unique
  creator             String          
  owner               String         
  collectionID        String          
  chainID             String
  title               String          @unique
  title_lowercase     String      
  description         String?
  source              String?
  contractAddress     String?
  active              Boolean?        @default(true)
  disabled            Boolean?        @default(false)
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  listOfLikedUsers    String[] 
  listOfFavoriteUsers    String[]    
  totalViews          Int             @default(0)
  marketorders        marketorders[]
}

model marketorders {
  id                  String          @id @default(auto()) @map("_id") @db.ObjectId
  tokenID             String          @unique
  chainID             String
  tokenAddress        String
  buyer               String?          
  seller              String  
  paymentType         String
  event               Int?
  status              Int          
  price               Float
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  buyerWallet         users?           @relation("buyer_marketorders", fields: [buyer], references: [wallet])
  sellerWallet        users           @relation("seller_marketorders", fields: [seller], references: [wallet])
  tokens              tokens          @relation(fields: [tokenID], references: [tokenID])
}